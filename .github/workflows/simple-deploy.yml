name: Simple Deploy Next.js

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # 构建和部署
  build-and-deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './package-lock.json'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Build Next.js application
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./
        file: ./Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/nextjs:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.PORT }}
        script: |
          echo "🚀 开始部署 Next.js 应用..."
          
          # 进入项目目录
          cd /path/to/your/airbnb-video
          
          # 拉取最新代码
          git pull origin main
          
          # 停止现有服务
          docker-compose down
          
          # 拉取最新镜像
          docker-compose pull
          
          # 启动服务
          docker-compose up -d
          
          # 等待服务启动
          sleep 15
          
          # 健康检查
          if curl -f http://localhost:8080 > /dev/null 2>&1; then
            echo "✅ 部署成功！"
            echo "🌐 应用地址: http://${{ secrets.HOST }}:8080"
          else
            echo "❌ 健康检查失败"
            exit 1
          fi
          
          # 清理未使用的镜像
          docker image prune -f
          
          echo "�� Next.js 应用部署完成！" 